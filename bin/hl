#! /usr/bin/env bash

# @file        bin/hl
# @author      Brandon Christie <bchristie.dev@gmail.com>


#######################################
# Get help text
# Globals:
#   None
# Arguments:
#   None
# Outputs:
#   Writes help text to STDOUT
#######################################
function __hl_help__()
{
    cat <<EOH
Usage: hl [-b|--background <color>] [-f|--foreground <color>] [-h|--help]
          [-p|--persist] [-s|--style <style>]

Options:
  -b, --background
  -f, --foreground
  -h, --help
  -p, --persist
  -s, --style
EOH
}

#######################################
# Entry point
# Globals:
#   None
# Arguments:
#   {@} Options
#######################################
function __hl_main__()
{
    local -r opts=$(getopt -o :b:f:hps: -l background:,foreground:,help,persist,style: -- "$@") || exit
    local -A colors=([black]=30 [red]=31 [green]=32 [yellow]=33 [blue]=34 [purple]=35 [cyan]=36 [white]=37)
    local -A styles=([normal]=0 [bold]=1 [faint]=2 [italics]=3 [underline]=4)
    local delimiter=true
    local hl

    eval set -- "$opts"

    while true; do
        case "$1" in
            -h|--help)
                __hl_help__
                exit
                ;;
            -b|--background)
                hl="$hl\e[$((${colors[$2]}+10))m"
                shift
                ;;
            -f|--foreground)
                hl="$hl\e[${colors[$2]}m"
                shift
                ;;
            -p|--persist)
                delimiter=
                ;;
            -s|--style)
                hl="$hl\e[${styles[$2]}m"
                shift
                ;;
            --)
                shift
                break
                ;;
            -*)
                ;;
            *)
                break
                ;;
        esac

        shift
    done

    echo -e "$hl$*${delimiter:+\e[${styles[normal]}m}"
}

__hl_main__ "$@"
